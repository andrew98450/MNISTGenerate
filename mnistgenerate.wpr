#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('model.py'),
                  loc('sample.py'),
                  loc('train.py'),
                  loc('utils.py')]
proj.file-type = 'normal'
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'XWyRuFoWSrDznBhm3YnK7a1dhn'\
        'KVWf97',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2647058823529411,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(2,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('sample.py'),
        {'attrib-starts': [],
         'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
         'first-line': 0L,
         'folded-linenos': [],
         'sel-line': 10L,
         'sel-line-start': 160L,
         'selection_end': 188L,
         'selection_start': 188L,
         'zoom': 0L},
        1619957147.294],
        [loc('model.py'),
         {'attrib-starts': [('NetD|0|',
                             29),
                            ('NetD|0|.__init__|0|',
                             31)],
          'code-line': '            torch.nn.Linear(512, 1),\r\n',
          'first-line': 9L,
          'folded-linenos': [],
          'sel-line': 44L,
          'sel-line-start': 1633L,
          'selection_end': 1664L,
          'selection_start': 1664L,
          'zoom': 0L},
         1619957148.738],
        [loc('train.py'),
         {'attrib-starts': [],
          'code-line': '        g_loss = loss_f(d_fake, torch.ones_like(d_fa'\
                       'ke))\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 64L,
          'sel-line-start': 2026L,
          'selection_end': 2082L,
          'selection_start': 2082L,
          'zoom': -1L},
         1619957149.334],
        [loc('sample.py'),
         {'attrib-starts': [],
          'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 160L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1619957149.669],
        [loc('model.py'),
         {'attrib-starts': [('NetD|0|',
                             29),
                            ('NetD|0|.__init__|0|',
                             31)],
          'code-line': '            torch.nn.Linear(512, 1),\r\n',
          'first-line': 18L,
          'folded-linenos': [],
          'sel-line': 44L,
          'sel-line-start': 1633L,
          'selection_end': 1664L,
          'selection_start': 1664L,
          'zoom': 0L},
         1619957156.602],
        [loc('train.py'),
         {'attrib-starts': [],
          'code-line': '        g_loss = loss_f(d_fake, torch.ones_like(d_fa'\
                       'ke))\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 64L,
          'sel-line-start': 2026L,
          'selection_end': 2082L,
          'selection_start': 2082L,
          'zoom': -1L},
         1619957157.217],
        [loc('sample.py'),
         {'attrib-starts': [],
          'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 160L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1619957157.504],
        [loc('model.py'),
         {'attrib-starts': [('NetD|0|',
                             29),
                            ('NetD|0|.__init__|0|',
                             31)],
          'code-line': '            torch.nn.Linear(512, 1),\r\n',
          'first-line': 6L,
          'folded-linenos': [],
          'sel-line': 44L,
          'sel-line-start': 1633L,
          'selection_end': 1664L,
          'selection_start': 1664L,
          'zoom': 0L},
         1619957159.573],
        [loc('utils.py'),
         {'attrib-starts': [('load_dataset|0|',
                             2)],
          'code-line': '    return dataset\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 368L,
          'selection_end': 386L,
          'selection_start': 386L,
          'zoom': 0L},
         1619957161.486],
        [loc('train.py'),
         {'attrib-starts': [],
          'code-line': '        g_loss = loss_f(d_fake, torch.ones_like(d_fa'\
                       'ke))\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 64L,
          'sel-line-start': 2026L,
          'selection_end': 2082L,
          'selection_start': 2082L,
          'zoom': -1L},
         1619957162.761],
        [loc('sample.py'),
         {'attrib-starts': [],
          'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 160L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1619957163.648],
        [loc('model.py'),
         {'attrib-starts': [('NetG|0|',
                             2),
                            ('NetG|0|.__init__|0|',
                             4)],
          'code-line': '            torch.nn.Linear(256, 128 * 7 * 7),\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 271L,
          'selection_end': 302L,
          'selection_start': 302L,
          'zoom': 0L},
         1619957414.519],
        [loc('sample.py'),
         {'attrib-starts': [],
          'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 160L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1619957416.208],
        [loc('model.py'),
         {'attrib-starts': [('NetG|0|',
                             2),
                            ('NetG|0|.__init__|0|',
                             4)],
          'code-line': '            torch.nn.Linear(256, 128 * 7 * 7),\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 271L,
          'selection_end': 302L,
          'selection_start': 302L,
          'zoom': 0L},
         1619957419.29],
        [loc('train.py'),
         {'attrib-starts': [],
          'code-line': '        g_loss = loss_f(d_fake, torch.ones_like(d_fa'\
                       'ke))\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 64L,
          'sel-line-start': 2026L,
          'selection_end': 2082L,
          'selection_start': 2082L,
          'zoom': -1L},
         1619957420.487],
        [loc('sample.py'),
         {'attrib-starts': [],
          'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 160L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1619957421.061],
        [loc('utils.py'),
         {'attrib-starts': [('load_dataset|0|',
                             2)],
          'code-line': '        torchvision.transforms.ToTensor(),\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 4L,
          'sel-line-start': 122L,
          'selection_end': 164L,
          'selection_start': 164L,
          'zoom': 0L},
         1619957425.33],
        [loc('train.py'),
         {'attrib-starts': [],
          'code-line': '        g_loss = loss_f(d_fake, torch.ones_like(d_fa'\
                       'ke))\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 64L,
          'sel-line-start': 2026L,
          'selection_end': 2082L,
          'selection_start': 2082L,
          'zoom': -1L},
         1619957426.153],
        [loc('sample.py'),
         {'attrib-starts': [],
          'code-line': 'inputs = torch.randn(20, 128).float()\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 160L,
          'selection_end': 188L,
          'selection_start': 188L,
          'zoom': 0L},
         1619957426.676],
        [loc('model.py'),
         {'attrib-starts': [('NetG|0|',
                             2),
                            ('NetG|0|.__init__|0|',
                             4)],
          'code-line': '            torch.nn.Linear(256, 128 * 7 * 7),\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 10L,
          'sel-line-start': 271L,
          'selection_end': 302L,
          'selection_start': 302L,
          'zoom': 0L},
         1619959301.446]],
        20),
        'current-loc': loc('sample.py'),
        'editor-state-list': [(loc('model.py'),
                               {'attrib-starts': [('NetG|0|',
        2),
        ('NetG|0|.__init__|0|',
         4)],
                                'code-line': '            torch.nn.Linear(25'\
        '6, 128 * 7 * 7),\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 10L,
                                'sel-line-start': 271L,
                                'selection_end': 302L,
                                'selection_start': 302L,
                                'zoom': 0L}),
                              (loc('sample.py'),
                               {'attrib-starts': [],
                                'code-line': 'model = torch.load("mnistG_mod'\
        'el.pth")\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 6L,
                                'sel-line-start': 96L,
                                'selection_end': 116L,
                                'selection_start': 116L,
                                'zoom': 0L}),
                              (loc('train.py'),
                               {'attrib-starts': [],
                                'code-line': '        g_loss = loss_f(d_fake'\
        ', torch.ones_like(d_fake))\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 64L,
                                'sel-line-start': 2026L,
                                'selection_end': 2082L,
                                'selection_start': 2082L,
                                'zoom': -1L}),
                              (loc('utils.py'),
                               {'attrib-starts': [('load_dataset|0|',
        2)],
                                'code-line': '        torchvision.transforms'\
        '.ToTensor(),\r\n',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 4L,
                                'sel-line-start': 122L,
                                'selection_end': 164L,
                                'selection_start': 164L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('model.py'),
         loc('sample.py'),
         loc('train.py'),
         loc('utils.py')]),
                               'open_files': [u'utils.py',
        u'train.py',
        u'model.py',
        u'sample.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1613867557.734),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1619955434.763),
                 'user_data': {}},
        'window-alloc': (850,
                         0,
                         1027,
                         1053)}]}
guimgr.recent-documents = [loc('sample.py'),
                           loc('model.py'),
                           loc('train.py'),
                           loc('utils.py')]
guimgr.visual-state = {loc('file:C:/Program Files/Python38/Lib/site-packages/torch/nn/modules/activation.py'): {'a'\
        'ttrib-starts': [('ELU|0|',
                          440)],
        'code-line': 'class ELU(Module):\r\n',
        'first-line': 421L,
        'folded-linenos': [],
        'sel-line': 440L,
        'sel-line-start': 12891L,
        'selection_end': 12900L,
        'selection_start': 12897L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/site-packages/torch/optim/adam.py'): {'a'\
        'ttrib-starts': [('Adam|0|',
                          5)],
        'code-line': '    It has been proposed in `Adam: A Method for Stocha'\
                     'stic Optimization`_.\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 145L,
        'selection_end': 158L,
        'selection_start': 158L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python38/Lib/site-packages/torch/optim/rmsprop.py'): {'a'\
        'ttrib-starts': [('RMSprop|0|',
                          4)],
        'code-line': '    adding epsilon (note that TensorFlow interchanges '\
                     'these two operations). The effective\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 475L,
        'selection_end': 499L,
        'selection_start': 499L,
        'zoom': 0L},
                       loc('../PassGAN/train.py'): {'attrib-starts': [],
        'code-line': 'import argparse\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L}}
